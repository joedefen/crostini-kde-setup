#!/bin/bash
# maint tool for crostini-KDE containter

function get_cros_ver() {
    cat /dev/.cros_milestone
}
function get_cros_pkg_ver() {
    apt_cros="/etc/apt/sources.list.d/cros.list"
    sed -r 's!^(.*cros-packages/)([0-9]+)\b(.*)$!\2!' $apt_cros
}

function set_password() {
    set -x
    sudo passwd "$1"
}

function update_linux() {
    # upgrade the software in the crostini container

    cros_ver=$(get_cros_ver)
    apt_cros="/etc/apt/sources.list.d/cros.list"
    cros_pkg_ver=$(get_cros_pkg_ver)

    echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections

    set -x

    if [ "$cros_ver" != "$cros_pkg_ver" ]; then
        sudo sed -i -E 's!^(.*cros-packages/)([0-9]+)\b(.*)$!\1'"${cros_ver}"'\3!' $apt_cros
    fi
    sudo apt -y update
    sudo apt -y --allow-downgrades --no-install-recommends upgrade
    sudo apt -y --allow-downgrades --no-install-recommends dist-upgrade
    sudo apt -y autoremove
}

function refresh_icons() {
    # NOTE: this scripts hides apps from Crostini temporarily and then makes them
    # visible.  This sometimes fixes screwed up Crostini applications.
    # Do not interrupt this script.
    trap '{ echo "Caught Ctrl-C ... but ignoring"; sleep 5; }' INT
    set -x
    sudo mv /usr/share/applications /usr/share/applications.tmp
    sudo mv ~/.local/share/applications ~/.local/share/applications.tmp
    sleep 5
    sudo mv /usr/share/applications.tmp /usr/share/applications
    sudo mv ~/.local/share/applications.tmp ~/.local/share/applications
}

function enable_flatpak() {
    # Enable flatpak and configure Discover to use it.
    set -x
    sudo apt -y install flatpak
    flatpak --user remote-add --if-not-exists flathup https://flathub.org/repo/flathub.flatpakrepo
    sudo apt -y install --no-install-recommends plasma-discover-backend-flatpak
    cat <<'!!!'
**********************************************************************************************
**********************************************************************************************
**  Flatpak is enabled and will work for many apps; for more Flatpack apps to work,
**  follow these additional Steps:
**  + Press Ctrl+Alt+T (when hovering over a Chrome window). A "crosh" terminal window will open
**    (this is NOT the crostini terminal).
**  + Type `vsh termina` and press enter.
**  + Type `lxc config set penguin security.nesting true` and press enter.
**  + Twice type `exit` and press enter (to exit termina and crosh).
**  + Restart crostini (i.e., right-click on Terminal in the shelf, and click "Shut down Linux")
**********************************************************************************************
**********************************************************************************************
!!!

    echo -e "\n\n======> FINISHED: please restart Linux manually..."
}
function is_flatpak_enabled() {
    if which flatpak > /dev/null 2>&1; then
        dpkg-query -W plasma-discover-backend-flatpak > /dev/null 2>&1
    else
        false
    fi
}

function purge_flatpak() {
    if  is_flatpak_enabled; then
        set -x 
        flatpak uninstall --all -y
        sudo apt -y purge flatpak plasma-discover-backend-flatpak
        sudo apt -y autoremove
        sudo rm -rf ~/.local/share/flatpak ~/.cache/flatpak /var/lib/flatpak /root/.local/share/flatpak
        echo -e "\n\n======> FINISHED: please restart Linux manually..."
    else
        echo -e "\nNOTE: nothing to do; flatpak is disabled"
    fi

}


function cleanup_flatpak() {
    # Remove unnecessary disk consumed by Flatpak particularly after
    # removing applications with Discover.
    if  is_flatpak_enabled; then
        set -x
        flatpak uninstall --unused -y
        flatpak list
    else
        echo -e "\nNOTE: nothing to do; flatpak is disabled"
    fi
}

function enable_snap() {
    # Enable flatpak and configure Discover to use it.
    set -x
    sudo apt -y install libsquashfuse squashfuse fuse
    sudo apt -y install snapd
    # flatpak --user remote-add --if-not-exists flathup https://flathub.org/repo/flathub.flatpakrepo
    sudo apt -y install --no-install-recommends plasma-discover-backend-snap
}

function is_snap_enabled() {
    if which snapctl > /dev/null 2>&1; then
        dpkg-query -W plasma-discover-backend-snap > /dev/null 2>&1
    else
        false
    fi
}

function set_debian_repository() {
    # Switch to given debian release (i.e., buster, unstable, or testing)
    #  - NOTE: not currently supporint 'stable'
    # Passing "stable" means "bullseye" (for a while)
    # Passing "sid" means "unstable" (permanently)
    apt_list=/etc/apt/sources.list
    case $1 in
        buster|stable) src=bullseye ; pref=stable ;;
        testing) src=testing ; pref=testing ;;
        sid|unstable) src=unstable ; pref=unstable ;;
        *) echo "Unknown Debian Repository: '$1'"; exit 1 ;;
    esac
    count=$(grep -c $src $apt_list)
    if [ "x$count" != "x0" ]; then
        echo "NOTE: Repository already set to $src"
    fi

    line1="deb https://deb.debian.org/debian $src main contrib"
    line2="deb-src https://deb.debian.org/debian-security $src/updates main contrib"

    echo $line1 | sudo tee $apt_list > /dev/null
    if [ "$pref" == "stable" ] ; then
        # only stable has security updates
        echo $line2 | sudo tee -a $apt_list
    fi

    cat <<EOF | sudo tee /etc/apt/preferences >/dev/null
Package: *
Pin: release a=$pref
Pin-Priority: 1001
EOF

    set -x
    update_linux
    python3 -m pip install simple-term-menu
    echo -e "\n\n======> FINISHED: please restart Linux manually..."
}

function get_debian_src() {
    apt_list=/etc/apt/sources.list
    if grep -c unstable $apt_list > /dev/null; then
        echo unstable
    elif grep -c testing $apt_list > /dev/null; then
        echo testing
    else
        echo stable
    fi
}

function get_state() {
    cros_ver=$(get_cros_ver)
    msg="STATUS: ChromeOS v$cros_ver"
    cros_pkg_ver=$(get_cros_ver)
    if [ "$cros_ver" != "$cros_pkg_ver" ]; then
        msg="$msg; out-of-date pkgs (v$cros_pkg_ver)"
    fi
    debian_src=$(get_debian_src)
    msg="$msg; on Debian $debian_src"
#   if is_snap_enabled; then
#       msg="$msg; Snap enabled"
#   else
#       msg="$msg; Snap disabled"
#   fi
    if is_flatpak_enabled; then
        msg="$msg; Flatpak enabled"
    else
        msg="$msg; Flatpak disabled"
    fi
    echo $msg
}

function disable_libreoffice_file_locking() {
    set -x
    if which soffice > /dev/null; then
        soffice=$(which soffice)
        sudo sed -i -E 's!^([^#].*_ENABLE_FILE_LOCKING.*)$!# \1!' $soffice
    fi
    cat <<'!!!'
**********************************************************************************************
** + To fully enable non-Flatpak LibreOffice on Google Drive, also:
**   + In LibreOffice's Tools > Options > LibreOffice > Advanced > Open Expert Configuration, set:
**     + *UseLocking* to false
**     + *UseDocumentOOoLockFile* to false
** + You *may* wish to upgrade LibreOffice (e.g., by changing Debian repository to **Unstable**.)
** + HINT: For a better LibreOffice look, run `sudo apt install libreoffice-gtk3` from Terminal.
**********************************************************************************************
!!!
}

trap -- '' SIGINT SIGQUIT SIGTERM SIGHUP SIGPIPE SIGUSR1 SIGUSR2
stty sane # just in case
case $1 in 
    get-state) get_state;;
    set-password-root) set_password root;;
    set-password-user) set_password ${USER};;
    update-linux) update_linux;;
    refresh-icons) refresh_icons;;
    enable-flatpak) enable_flatpak;;
    purge-flatpak) purge_flatpak;;
    cleanup-flatpak) cleanup_flatpak;;
    enable-snap) enable_snap;;
    set-debian-stable) set_debian_repository stable;;
    set-debian-testing) set_debian_repository testing;;
    set-debian-unstable) set_debian_repository unstable;;
    disable-libreoffice-file-locking) disable_libreoffice_file_locking;;
    *) echo "ERROR: maintcli: Unknown command: '$1'";
        echo "USE: maintcli {subcmd} # where {subcmd} may be:"
        echo "      get-state, update-linux, refresh-icons,"
        echo "      enable-flatpak, purge-flatpak, cleanup-flatpak,"
        echo "      set-debian-testing, set-debian-unstable,"
        echo "      or disable-libreoffice-file-locking"
        exit 1
        ;;
esac
